Why do we require __init__(self) in a class ?
1) self as it suggests, refers to itself- the object which has called the method. That is, if you have N objects calling the method, then self.a will refer to a separate instance of the variable for each of the N objects. Imagine N copies of the variable a for each object


2)__init__ is what is called as a constructor in other OOP languages such as C++/Java. The basic idea is that it is a special method which is automatically called when an object of that Class is created.

3) Basically self is a reference (kind of like a pointer, but self is a special reference which you can't assign to) to an object, and __init__ is a function which is called to initialize the object - that is, set the values of variables etc. - just after memory is allocated for it.


4) How to Find info about a particular python Module
Say for eg ., you want to find info on a module math , you run dir(math), this will list the option available under it.

5) How to find installed modules in Python ?
>>> help('modules')
Please wait a moment while I gather a list of all available modules...

This will list the complete list of modules.

Also you can use #pip freeze <-- this will list modules with version numbers 
6) How to view man page like listing for a particular module ?
for eg to view sys modules man page >>help(sys) <-- in python interpreter.
also you could try this in interpreter
>>>import math
>>> math.__doc__

>>>import sys
>>> sys.__doc__


7) Getting more details about a particular module , like which package it belongs to etc..

>>> import math

>>> dir(math)
['__doc__', '__file__', '__name__', '__package__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'exp', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'hypot', 'isinf', 'isnan', 'ldexp', 'log', 'log10', 'log1p', 'modf', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc']

>>> math.__file__
'/usr/lib64/python2.6/lib-dynload/mathmodule.so'

8) Joining 2 lists to make a dictionary 

>>> title = ['krishna','madhava','govinda']
>>> poet = ['hare', 'hare hare', 'hari hari']

>>> book = dict(zip(title,poet))
>>> book
{'krishna': 'hare', 'govinda': 'hari hari', 'madhava': 'hare hare'}

